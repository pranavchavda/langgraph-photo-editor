name: Build and Release Cross-Platform

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - os: macos-latest
            platform: mac
            artifact: "*.dmg"
          - os: windows-latest
            platform: win
            artifact: "*.exe"
          - os: ubuntu-latest
            platform: linux
            artifact: "*.AppImage"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: electron/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Node dependencies
        working-directory: electron
        run: npm ci

      - name: Prepare assets
        working-directory: electron
        run: npm run prepare-assets

      - name: Bundle Python environment
        working-directory: electron
        run: npm run bundle-python

      - name: Build Electron app
        working-directory: electron
        run: npm run build

      - name: Build installer for macOS
        if: matrix.os == 'macos-latest'
        working-directory: electron
        run: npm run dist:mac

      - name: Build installer for Windows
        if: matrix.os == 'windows-latest'
        working-directory: electron
        run: npm run dist:win

      - name: Build installer for Linux
        if: matrix.os == 'ubuntu-latest'
        working-directory: electron
        run: npm run dist:linux

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-installer
          path: |
            electron/build/${{ matrix.artifact }}
            electron/build/*.deb
          retention-days: 30

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            mac-installer/*.dmg
            win-installer/*.exe
            linux-installer/*.AppImage
            linux-installer/*.deb
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}